// <auto-generated />
using System;
using CurrencyManagement.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace CurrencyManagement.Data.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230413135827_Initial")]
    partial class Initial
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("CurrencyManagement.Core.Models.Currency", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyType")
                        .HasColumnType("integer");

                    b.Property<decimal>("CurrentPriceInUSD")
                        .HasColumnType("numeric");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(128)
                        .HasColumnType("character varying(128)");

                    b.HasKey("Id");

                    b.HasIndex("Name")
                        .IsUnique();

                    b.ToTable("Currencies");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyType = 1,
                            CurrentPriceInUSD = 1.0m,
                            Name = "USD"
                        },
                        new
                        {
                            Id = 2,
                            CurrencyType = 1,
                            CurrentPriceInUSD = 1.11m,
                            Name = "EUR"
                        },
                        new
                        {
                            Id = 3,
                            CurrencyType = 1,
                            CurrentPriceInUSD = 0.012m,
                            Name = "RUB"
                        },
                        new
                        {
                            Id = 4,
                            CurrencyType = 2,
                            CurrentPriceInUSD = 30288.8m,
                            Name = "BTC"
                        },
                        new
                        {
                            Id = 5,
                            CurrencyType = 2,
                            CurrentPriceInUSD = 2005.87m,
                            Name = "ETH"
                        },
                        new
                        {
                            Id = 6,
                            CurrencyType = 2,
                            CurrentPriceInUSD = 94.13m,
                            Name = "LTC"
                        });
                });

            modelBuilder.Entity("CurrencyManagement.Core.Models.CurrencyDimension", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("CurrencyId")
                        .HasColumnType("integer");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("timestamp with time zone");

                    b.Property<DateTime?>("FromDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("timestamp with time zone")
                        .HasDefaultValue(new DateTime(2023, 4, 13, 13, 58, 27, 725, DateTimeKind.Utc).AddTicks(9462));

                    b.Property<bool>("IsCurrent")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("boolean")
                        .HasDefaultValue(true);

                    b.Property<decimal>("PriceInUSD")
                        .HasColumnType("numeric");

                    b.HasKey("Id");

                    b.HasIndex("CurrencyId");

                    b.ToTable("CurrencyDimensions");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CurrencyId = 1,
                            FromDate = new DateTime(2023, 4, 13, 13, 58, 27, 726, DateTimeKind.Utc).AddTicks(239),
                            IsCurrent = false,
                            PriceInUSD = 1.0m
                        },
                        new
                        {
                            Id = 2,
                            CurrencyId = 2,
                            FromDate = new DateTime(2023, 4, 13, 13, 58, 27, 726, DateTimeKind.Utc).AddTicks(249),
                            IsCurrent = false,
                            PriceInUSD = 1.11m
                        },
                        new
                        {
                            Id = 3,
                            CurrencyId = 3,
                            FromDate = new DateTime(2023, 4, 13, 13, 58, 27, 726, DateTimeKind.Utc).AddTicks(252),
                            IsCurrent = false,
                            PriceInUSD = 0.012m
                        },
                        new
                        {
                            Id = 4,
                            CurrencyId = 4,
                            FromDate = new DateTime(2023, 4, 13, 13, 58, 27, 726, DateTimeKind.Utc).AddTicks(254),
                            IsCurrent = false,
                            PriceInUSD = 30288.8m
                        },
                        new
                        {
                            Id = 5,
                            CurrencyId = 5,
                            FromDate = new DateTime(2023, 4, 13, 13, 58, 27, 726, DateTimeKind.Utc).AddTicks(256),
                            IsCurrent = false,
                            PriceInUSD = 2005.87m
                        },
                        new
                        {
                            Id = 6,
                            CurrencyId = 6,
                            FromDate = new DateTime(2023, 4, 13, 13, 58, 27, 726, DateTimeKind.Utc).AddTicks(259),
                            IsCurrent = false,
                            PriceInUSD = 94.13m
                        });
                });

            modelBuilder.Entity("CurrencyManagement.Core.Models.CurrencyDimension", b =>
                {
                    b.HasOne("CurrencyManagement.Core.Models.Currency", "Currency")
                        .WithMany("CurrencyDimensions")
                        .HasForeignKey("CurrencyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Currency");
                });

            modelBuilder.Entity("CurrencyManagement.Core.Models.Currency", b =>
                {
                    b.Navigation("CurrencyDimensions");
                });
#pragma warning restore 612, 618
        }
    }
}
